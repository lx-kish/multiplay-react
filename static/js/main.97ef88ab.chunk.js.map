{"version":3,"sources":["components/icons-svg/icon-chevron-down.component.jsx","components/header/header.component.jsx","components/icons-svg/icon-heart.component.jsx","components/icons-svg/icon-lx-kish.component.jsx","components/footer/footer.component.jsx","table.content.js","components/tab-header/tab-header.component.jsx","components/tab-empty-line/tab-empty-line.component.jsx","components/icons-svg/icon-circle.component.jsx","components/tab-cell/tab-cell.component.jsx","components/tab-empty-cell/tab-empty-cell.component.jsx","components/tab-line/tab-line.component.jsx","components/table/tab.component.jsx","pages/main-page/main-page.page.jsx","App.js","index.js"],"names":["IconChevronDown","props","className","xmlns","width","height","viewBox","d","Header","handleShowInstructionsChange","setState","checked","state","showCollapsible","bind","type","id","this","onChange","htmlFor","React","Component","IconHeart","IconLxKish","aria-labelledby","points","Footer","TabContent","styles","1","2","3","4","5","6","7","8","9","10","TabHeader","useEffect","header","document","getElementById","sticky","offsetTop","scrollCallBack","window","addEventListener","pageYOffset","classList","add","remove","removeEventListener","Array","map","x","i","Fragment","key","sign","content","EmptyLine","IconCircle","TabCell","getWholeHalfANumber","aNumber","Math","round","getTopLineDotsAmount","line","handleKeyDown","e","which","target","max","value","length","Number","isNaN","applyKeyDown","preventDefault","pattern","inputMode","placeholder","min","step","onKeyDown","event","TabEmptyCell","TabLine","Tab","MainPage","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.97ef88ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IconChevronDown = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconChevronDown;","import React from 'react';\r\n\r\nimport IconChevronDown from '../icons-svg/icon-chevron-down.component';\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false\r\n        };\r\n        this.handleShowInstructionsChange = this.handleShowInstructionsChange.bind(this);\r\n    }\r\n\r\n    handleShowInstructionsChange = () => {\r\n\r\n        this.setState({ checked: !this.state.checked });\r\n    }\r\n\r\n    showCollapsible = () => {\r\n        return this.state.checked ?\r\n            <div className='collapsible__part'>\r\n                <hr className='header__hr' />\r\n                <p className='header__description'>\r\n                    - Add the amount of dots under the field to the number from the left.<br />\r\n                        - Write an answer at the field above.<br />\r\n                            - Right answer colors <b>white</b>.<br />\r\n                                - Wrong answer colors <span className='three'><b>red</b></span>.<br />\r\n                                    - Move to the next field and repeate.\r\n                </p>\r\n            </div>\r\n            : null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <header className='header'>\r\n                <h1 className='header__title'>\r\n                    Multiply me\r\n            </h1>\r\n                <h3 className='header__title--small'>learn multiplication by addition</h3>\r\n                <div className='collapsible'>\r\n                    <hr className='header__hr' />\r\n                    <h3 className='collapsible__title header__title--small'>How to use</h3>\r\n\r\n                    <input\r\n                        type='checkbox'\r\n                        className='collapsible__btn'\r\n                        id='collapsible-toggle'\r\n                        checked={this.state.checked}\r\n                        onChange={this.handleShowInstructionsChange}\r\n                    />\r\n\r\n                    <label htmlFor='collapsible-toggle' className='collapsible__icon-box'>\r\n                        <IconChevronDown className='collapsible__icon' />\r\n                    </label>\r\n                    {this.showCollapsible()}\r\n                    <hr className='header__hr' />\r\n                </div>\r\n            </header>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst IconHeart = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M23.6 2c-3.363 0-6.258 2.736-7.599 5.594-1.342-2.858-4.237-5.594-7.601-5.594-4.637 0-8.4 3.764-8.4 8.401 0 9.433 9.516 11.906 16.001 21.232 6.13-9.268 15.999-12.1 15.999-21.232 0-4.637-3.763-8.401-8.4-8.401z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconHeart;","import React from 'react';\r\n\r\nconst IconLxKish = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 60 60\" aria-labelledby=\"title\">\r\n            <title id=\"title\">Lx Kish Logo</title>\r\n            <polygon points=\"1 8 8 1 8 52 59 52 52 59 1 59\" />\r\n            <polygon points=\"15.75 13.5 22.5 6.75 52.25 36.5 45.5 43.25\" />\r\n            <polygon points=\"15.75 36.5 45.5 6.75 52.25 13.5 22.5 43.25\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconLxKish;","import React from 'react';\r\n\r\nimport IconHeart from '../icons-svg/icon-heart.component';\r\nimport IconLxKish from '../icons-svg/icon-lx-kish.component';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className='footer'>\r\n            <p className='footer__credentials'>\r\n                Built with\r\n                <span className='footer__icon-box'>\r\n                    <IconHeart className='footer__icon three' />\r\n                </span>\r\n                by\r\n                <span className='footer__icon-box'>\r\n                    <IconLxKish className='footer__icon seven' />\r\n                </span>\r\n                Alexander Kish\r\n            </p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","const TabContent = {\r\n    styles: {\r\n        1: 'one',\r\n        2: 'two',\r\n        3: 'three',\r\n        4: 'four',\r\n        5: 'five',\r\n        6: 'six',\r\n        7: 'seven',\r\n        8: 'eight',\r\n        9: 'nine',\r\n        10: 'ten'\r\n    }\r\n\r\n}\r\n\r\nexport default TabContent;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nconst TabHeader = props => {\r\n\r\n    React.useEffect(() => {\r\n        const header = document.getElementById('header-stick');\r\n        const sticky = header.offsetTop;\r\n        const scrollCallBack = window.addEventListener('scroll', () => {\r\n            if (window.pageYOffset >= sticky) {\r\n                header.classList.add('sticky');\r\n            } else {\r\n                header.classList.remove('sticky');\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollCallBack);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className='tab__line--header' id='header-stick'>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n            {[...Array(11)].map((x, i) =>\r\n                i > 1 ?\r\n                    <React.Fragment key={i}>\r\n                        <div className='tab__empty-cell tab__empty-cell--head'>{props.sign}</div>\r\n                        <div className={`tab__heading-cell ${content.styles[i]}`}>{i}</div>\r\n                    </React.Fragment>\r\n                    : null\r\n            )}\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default TabHeader;","import React from 'react';\r\n\r\nconst EmptyLine = props => {\r\n\r\n    return (\r\n        <div className='tab__line--empty-stick'>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>{props.sign}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EmptyLine;","import React from 'react';\r\n\r\nconst IconCircle = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M24 14c0 6.625-5.375 12-12 12s-12-5.375-12-12 5.375-12 12-12 12 5.375 12 12z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconCircle;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport IconCircle from '../icons-svg/icon-circle.component';\r\n\r\nconst TabCell = props => {\r\n\r\n    const getWholeHalfANumber = aNumber => {\r\n        return Math.round(aNumber / 2);\r\n    }\r\n\r\n    const getTopLineDotsAmount = () => {\r\n        return props.line > 2 ? getWholeHalfANumber(props.line) : props.line;\r\n    }\r\n\r\n    const getInputClassName = () => {\r\n        return props.value < 100 ?\r\n            'component__input' :\r\n            'component__input component__input--hundreed';\r\n    }\r\n\r\n    /**\r\n     * Validate a key down event for the range of criteria\r\n     * @param  {event} e a key down event\r\n     * @return {boolean} validation state\r\n     */\r\n    const applyKeyDown = e => {\r\n\r\n        var value = true;\r\n\r\n        /* arrows up & down are allways denied\r\n        * to prevent choosing right answer from keyboard \r\n        */\r\n        if (e.which === 38 || e.which === 40) {\r\n            return true;\r\n        }\r\n\r\n        /* delete, backspace and tab are always allowed \r\n        */\r\n        if (e.which === 8  //backspace\r\n            || e.which === 46 //delete\r\n            || e.which === 9)  //tab\r\n        {\r\n            return false;\r\n        }\r\n\r\n        /* more than 2 digits in a 2-digits fields,\r\n        * more than 3 digits in a 3-digits field\r\n        * instant return to prevent overflowing\r\n        */\r\n        if ((e.target.max < 100 && e.target.value.length > 1) //length > 2\r\n            || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n        {\r\n            return true;\r\n        }\r\n\r\n        /* https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n        * The problem with keyCode is to avoid the combined keys\r\n        * with the numbers on top of keyboard, we must add a check\r\n        *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n        * such as e @ & \" { } ...\r\n        */\r\n        let key = Number(e.key)\r\n        if (isNaN(key) || e.key === null || e.key === ' ') {\r\n            // console.log(\"is not numeric\");\r\n            value = true;\r\n        }\r\n        else {\r\n            // console.log(\"is numeric\");\r\n            value = false;\r\n        }\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n\r\n        if (applyKeyDown(e)) {\r\n            // console.log(applyKeyDown(e));\r\n            e.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='component'>\r\n            <div className='component__input-box'>\r\n                <input\r\n                    type='number'\r\n                    pattern='[0-9]*'\r\n                    inputMode='numeric'\r\n                    className={getInputClassName()}\r\n                    placeholder=' '\r\n                    min={props.value}\r\n                    max={props.value}\r\n                    step='1'\r\n                    onKeyDown={\r\n                        (event) => handleKeyDown(event)\r\n                    }\r\n                />\r\n            </div>\r\n            <div className='component__score'>\r\n                <div className=\"component__score-row\">\r\n                    {[...Array(getTopLineDotsAmount())].map((x, i) =>\r\n                        <IconCircle\r\n                            key={i}\r\n                            className={`component__icon ${content.styles[i + 1]}`}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className=\"component__score-row\">\r\n                    {[...Array(props.line - getTopLineDotsAmount())].map((x, i) =>\r\n                        <IconCircle\r\n                            key={i + getWholeHalfANumber(props.line)}\r\n                            className={`component__icon ${content.styles[i + 1 + getWholeHalfANumber(props.line)]}`}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabCell; ","import React from 'react';\r\n\r\nconst TabEmptyCell = props => {\r\n\r\n    return (\r\n        <div className='tab__empty-cell'>{props.sign}</div>\r\n    )\r\n};\r\n\r\nexport default TabEmptyCell;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport TabCell from '../../components/tab-cell/tab-cell.component';\r\nimport TabEmptyCell from '../../components/tab-empty-cell/tab-empty-cell.component';\r\n\r\nconst TabLine = props => {\r\n\r\n    return (\r\n        <div className={`tab__line ${props.className}`}>\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n            {[...Array(11)].map((x, i) =>\r\n                i > 1 ?\r\n                    <React.Fragment key={i}>\r\n                        <TabEmptyCell\r\n                            className='tab__empty-cell'\r\n                            sign={props.sign}\r\n                        />\r\n                        <TabCell                            \r\n                            line={props.value}\r\n                            value={i * props.value}\r\n                        />\r\n                    </React.Fragment>\r\n                    : null\r\n            )}\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabLine;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport TabHeader from '../tab-header/tab-header.component';\r\nimport TabEmptyLine from '../tab-empty-line/tab-empty-line.component';\r\nimport TabLine from '../tab-line/tab-line.component';\r\n// import TabCell from '../tab-cell/tab-cell.component';\r\n\r\n\r\nconst Tab = props => {\r\n\r\n    const sign = () => {\r\n        //PLUS SIGN = &#x2b;\r\n        //MINUS SIGN = &#x2212;\r\n        return <>&#x2b;</>\r\n    }\r\n\r\n    return (\r\n        <main className='main'>\r\n            <section className='tab'>\r\n                <TabHeader sign={sign()} />\r\n                <TabEmptyLine sign={sign()} />\r\n                {[...Array(11)].map((x, i) =>\r\n                    i > 1 ?\r\n                        <TabLine\r\n                            key={i}\r\n                            className={content.styles[i]}\r\n                            value={i}\r\n                            sign={sign()}\r\n                        />\r\n                        : null\r\n                )}\r\n                {/* <TabCell number={5} /> */}\r\n                <TabHeader />\r\n            </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Tab;","import React from 'react';\r\n\r\nimport Header from '../../components/header/header.component';\r\nimport Footer from '../../components/footer/footer.component';\r\nimport Tab from '../../components/table/tab.component';\r\n\r\nconst MainPage = props => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Tab />\r\n            <Footer />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\n\nimport './App.scss';\n\nimport MainPage from './pages/main-page/main-page.page';\n\nconst App = () => {\n\n  return (\n    <React.Fragment>\n      <MainPage />\n    </React.Fragment>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}