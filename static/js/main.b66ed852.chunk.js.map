{"version":3,"sources":["components/math/randoms/random-integer-in-a-range.js","utils/use-click-outside/useClickOutside.js","components/icons-svg/icon-chevron-down.component.jsx","components/toggler/toggler.component.jsx","components/headers/multiplication-tab/header.component.jsx","components/icons-svg/icon-heart.component.jsx","components/icons-svg/icon-lx-kish.component.jsx","components/footer/footer.component.jsx","table.content.js","components/multiplication-tab/tab-header/tab-header.component.jsx","components/multiplication-tab/tab-empty-line/tab-empty-line.component.jsx","components/input-fields/number-input-field.component.jsx","components/icons-svg/icon-circle.component.jsx","components/multiplication-tab/tab-cell/tab-cell.component.jsx","components/multiplication-tab/tab-empty-cell/tab-empty-cell.component.jsx","components/multiplication-tab/tab-line/tab-line.component.jsx","components/multiplication-tab/table/tab.component.jsx","components/navigation/burger icon/icon-burger.component.jsx","components/navigation/slide bar/slide-bar.component.jsx","components/navigation/siteMenu.js","components/navigation/navigation-bar/navigation-bar.component.jsx","pages/multiplication-tab/multiplication-tab.page.jsx","components/headers/addition-subtraction/header.component.jsx","components/number/number.component.jsx","components/sign/sign.component.jsx","components/addition-subtraction/problem/problem.component.jsx","components/addition-subtraction/problems/problems.component.jsx","pages/addition-subtraction/addition-subtraction.page.jsx","routes.jsx","index.js"],"names":["module","exports","incomeMin","incomeMax","min","Math","ceil","parseInt","max","floor","random","e","Error","useClickOutside","elRef","callback","callbackRef","React","useRef","current","useEffect","handleClickOutside","contains","target","document","addEventListener","removeEventListener","IconChevronDown","props","className","xmlns","width","height","viewBox","d","Toggler","toggleBox","htmlFor","label","span","left","text","input","checked","onChange","right","content","type","id","Header","display","setChecked","subtract","setSubtract","IconHeart","IconLxKish","aria-labelledby","points","Footer","TabContent","styles","0","1","2","3","4","5","6","7","8","9","10","TabHeader","Array","map","x","i","j","Fragment","key","sign","EmptyLine","NumberInputField","handleKeyDown","which","value","length","Number","isNaN","applyKeyDown","preventDefault","pattern","inputMode","placeholder","number","step","onKeyDown","event","title","IconCircle","TabCell","getRoundedHalfANumber","aNumber","round","getTopLineDotsAmount","line","TabEmptyCell","TabLine","Tab","IconBurger","open","setOpen","onClick","SlideBar","links","hideSliderMenu","link","to","name","element","showLinks","SiteMenu","NavigationBar","ref","menuRef","siteMenu","MultiplicationTab","useState","sticky","fullState","setFullState","getHeaderOffsetTop","header","getElementById","offsetTop","scrollCallBack","window","pageYOffset","classList","add","remove","resizeCallBack","inputs","getElementsByClassName","from","emptyInputs","toString","digit","index","Sign","Problem","renderProblem","operand","renderedElement","Problems","arr","cols","getContent","problems","columns","rows","row","idx","slice","problem","y","AdditionSubtraction","addition_problems","addend_one_from","addend_one_to","addend_two_from","addend_two_to","subtraction_problems","minuend_from","minuend_to","subtrahend_from","subtrahend_to","number_of_problems","columns_per_row","console","log","Routes","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b66ed852.chunk.js","sourcesContent":["/**\r\n * Algorithm of generating a whole random numbers in a specific range\r\n * \r\n * Based on discussion:\r\n * https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range \r\n * \r\n * Returns a random integer between min (inclusive) and max (inclusive).\r\n * The value is no lower than min (or the next integer greater than min\r\n * if min isn't an integer) and no greater than max (or the next integer\r\n * lower than max if max isn't an integer).\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nmodule.exports = (incomeMin, incomeMax) => {\r\n  try {\r\n    const min = Math.ceil(parseInt(incomeMin));\r\n    const max = Math.floor(parseInt(incomeMax));\r\n\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    return random;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n}","import React from 'react';\r\n\r\nconst useClickOutside = (elRef, callback) => {\r\n\r\n  const callbackRef = React.useRef();\r\n  callbackRef.current = callback;\r\n\r\n  React.useEffect(() => {\r\n\r\n    const handleClickOutside = e => {\r\n\r\n      if (!elRef?.current?.contains(e.target) && callbackRef.current) \r\n        callbackRef.current(e);\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside, true)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true)\r\n    }\r\n  }, [callbackRef, elRef]);\r\n};\r\n\r\nexport default useClickOutside;","import React from 'react';\r\n\r\nconst IconChevronDown = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconChevronDown;","import React from 'react';\r\n\r\nconst Toggler = props => {\r\n\r\n    return (\r\n        <div className={props.toggleBox.className}>\r\n            <label htmlFor={props.label.htmlFor}>\r\n                <span className={props.label.span.left.className}>{props.label.span.left.text}</span>\r\n                <input\r\n                    {...props.input}\r\n                    checked={props.checked}\r\n                    onChange={props.onChange}\r\n                    // type='checkbox'\r\n                    // className='add-subtract-toggle__input'\r\n                    // id='addition-subtraction'\r\n                    // checked={props.subtract}\r\n                    // onChange={() => props.setSubtract()}\r\n                />\r\n                <span className={props.label.span.right.className}>{props.label.span.right.text}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toggler;","import React from 'react';\r\n\r\nimport IconChevronDown from '../../icons-svg/icon-chevron-down.component';\r\n\r\nimport Toggler from '../../toggler/toggler.component';\r\n\r\nconst content = {\r\n    togglerAddSubtract: {\r\n        toggleBox: {\r\n            className: 'add-subtract-toggle__box'\r\n        },\r\n        label: {\r\n            htmlFor: 'addition-subtraction',\r\n            span: {\r\n                left: {\r\n                    className: 'header__description',\r\n                    text: 'addition',\r\n                },\r\n                right: {\r\n                    className: 'header__description',\r\n                    text: 'subtraction',\r\n                }\r\n            }\r\n        },\r\n        input: {\r\n            type: 'checkbox',\r\n            className: 'add-subtract-toggle__input',\r\n            id: 'addition-subtraction',\r\n        }\r\n    }\r\n}\r\n\r\nconst Header = props => {\r\n\r\n    // console.log('Header multitab props ===> ', props.setSubtract);\r\n    // console.log('Header multitab props ===> ', props.setChecked);\r\n    const showCollapsible = () => {\r\n        return props.display ?\r\n            <div className='collapsible__part'>\r\n                <hr className='header__hr' />\r\n                <p className='header__description'>\r\n                    {\r\n                        props.subtract ? \r\n                        `- Subtract the amount of dots under the field from the number from the left.`\r\n                        : \r\n                        `- Add the amount of dots under the field to the number from the left.`\r\n                    }\r\n                        <br />\r\n                        - Write an answer at the field above.<br />\r\n                            - Right answer colors <b>white</b>.<br />\r\n                                - Wrong answer colors <span className='three'><b>red</b></span>.<br />\r\n                                    - Move to the next field and repeate.\r\n                </p>\r\n            </div>\r\n            : null\r\n    }\r\n\r\n    return (\r\n\r\n        <header className='header'>\r\n            <h1 className='header__title'>\r\n                Multiply me\r\n            </h1>\r\n            <h3 className='header__title--small'>learn multiplication by addition and subtraction</h3>\r\n            <div className='collapsible'>\r\n                <hr className='header__hr' />\r\n                <h3 className='collapsible__title header__title--small'>How to use</h3>\r\n                <input\r\n                    type='checkbox'\r\n                    className='collapsible__btn'\r\n                    id='collapsible-toggle'\r\n                    checked={props.display}\r\n                    // onChange={props.setChecked}\r\n                    onChange={() => props.setChecked()}\r\n                />\r\n                <label htmlFor='collapsible-toggle' className='collapsible__icon-box'>\r\n                    <IconChevronDown className='collapsible__icon' />\r\n                </label>\r\n                {showCollapsible()}\r\n                <hr className='header__hr' />\r\n                <Toggler\r\n                    {...content.togglerAddSubtract}\r\n                    checked={props.subtract}\r\n                    // onChange={props.setSubtract}\r\n                    onChange={() => props.setSubtract()}\r\n                />\r\n                <hr className='header__hr' />\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst IconHeart = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M23.6 2c-3.363 0-6.258 2.736-7.599 5.594-1.342-2.858-4.237-5.594-7.601-5.594-4.637 0-8.4 3.764-8.4 8.401 0 9.433 9.516 11.906 16.001 21.232 6.13-9.268 15.999-12.1 15.999-21.232 0-4.637-3.763-8.401-8.4-8.401z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconHeart;","import React from 'react';\r\n\r\nconst IconLxKish = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 60 60\" aria-labelledby=\"title\">\r\n            <title id=\"title\">Lx Kish Logo</title>\r\n            <polygon points=\"1 8 8 1 8 52 59 52 52 59 1 59\" />\r\n            <polygon points=\"15.75 13.5 22.5 6.75 52.25 36.5 45.5 43.25\" />\r\n            <polygon points=\"15.75 36.5 45.5 6.75 52.25 13.5 22.5 43.25\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconLxKish;","import React from 'react';\r\n\r\nimport IconHeart from '../icons-svg/icon-heart.component';\r\nimport IconLxKish from '../icons-svg/icon-lx-kish.component';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className='footer'>\r\n            <p className='footer__credentials'>\r\n                Built with\r\n                <span className='footer__icon-box'>\r\n                    <IconHeart className='footer__icon three' />\r\n                </span>\r\n                by\r\n                <span className='footer__icon-box'>\r\n                    <IconLxKish className='footer__icon seven' />\r\n                </span>\r\n                Alexander Kish\r\n            </p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","const TabContent = {\r\n    styles: {\r\n        0: 'zero',\r\n        1: 'one',\r\n        2: 'two',\r\n        3: 'three',\r\n        4: 'four',\r\n        5: 'five',\r\n        6: 'six',\r\n        7: 'seven',\r\n        8: 'eight',\r\n        9: 'nine',\r\n        10: 'ten'\r\n    }\r\n\r\n}\r\n\r\nexport default TabContent;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nconst TabHeader = props => {\r\n\r\n    return (\r\n\r\n        <div className='tab__line--header' id={props.id}>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <div className='tab__empty-cell tab__empty-cell--head'>{props.sign}</div>\r\n                            <div className={`tab__heading-cell ${content.styles[j]}`}>{j}</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                else return null;\r\n            }\r\n            )}\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default TabHeader;","import React from 'react';\r\n\r\nconst EmptyLine = props => {\r\n\r\n    return (\r\n        <div className='tab__line--empty-stick'>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>{\" \"}</div>\r\n            {/* <div className='tab__heading-cell tab__heading-cell--side'>{props.sign}</div> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EmptyLine;","import React from 'react';\r\n\r\nconst NumberInputField = (props) => {\r\n\t/**\r\n     * Validate a key down event for the range of criteria\r\n     * @param  {event} e a key down event\r\n     * @return {boolean} validation state\r\n     */\r\n\tconst applyKeyDown = (e) => {\r\n\t\tvar value = true;\r\n\r\n\t\t/**\r\n\t\t\t * arrows up & down are allways denied\r\n\t\t\t * to prevent choosing right answer from keyboard \r\n\t\t\t */\r\n\t\tif (e.which === 38 || e.which === 40) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/** delete, backspace and tab are always allowed \r\n\t\t\t */\r\n\t\tif (\r\n\t\t\te.which === 8 || //backspace\r\n\t\t\te.which === 46 || //delete\r\n\t\t\te.which === 9\r\n\t\t) {\r\n\t\t\t//tab\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/** more than 2 digits in a 2-digits fields,\r\n\t\t\t * more than 3 digits in a 3-digits field\r\n\t\t\t * instant return to prevent overflowing\r\n\t\t\t */\r\n\t\tif (e.target.value.length > e.target.max.length - 1) {\r\n\t\t\t// (e.target.max < 100 && e.target.value.length > 1) || //length > 2\r\n\t\t\t// (e.target.max >= 100 && e.target.value.length > 2)\r\n\t\t// ) {\r\n\t\t\t//in \"100\" length > 3\r\n\t\t\t// || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t\t\t// console.log(e.target.value, e.which, e.target.max, e.target.value.length);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/** https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n\t\t\t * The problem with keyCode is to avoid the combined keys\r\n\t\t\t * with the numbers on top of keyboard, we must add a check\r\n\t\t\t *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n\t\t\t * such as e @ & \" { } ...\r\n\t\t\t */\r\n\t\tlet key = Number(e.key);\r\n\t\tif (isNaN(key) || e.key === null || e.key === ' ') {\r\n\t\t\t// console.log(\"is not numeric\");\r\n\t\t\tvalue = true;\r\n\t\t} else {\r\n\t\t\t// console.log(\"is numeric\");\r\n\t\t\tvalue = false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t/**\r\n\t * Handles key-down event, runs key validation, \r\n\t * decline input of the key if invalid\r\n\t * @return {void}\r\n\t */\r\n\tconst handleKeyDown = (e) => {\r\n\t\tif (applyKeyDown(e)) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"number\"\r\n\t\t\tpattern=\"[0-9]*\"\r\n\t\t\tinputMode=\"numeric\"\r\n\t\t\tclassName={props.className}\r\n\t\t\tplaceholder=\" \"\r\n\t\t\tmin={parseInt(props.number)}\r\n\t\t\tmax={parseInt(props.number)}\r\n\t\t\tstep=\"1\"\r\n\t\t\tonKeyDown={(event) => handleKeyDown(event)}\r\n\t\t\ttitle=\"\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default NumberInputField;\r\n","import React from 'react';\r\n\r\nconst IconCircle = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M24 14c0 6.625-5.375 12-12 12s-12-5.375-12-12 5.375-12 12-12 12 5.375 12 12z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconCircle;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport NumberInputField from '../../input-fields/number-input-field.component';\r\nimport IconCircle from '../../icons-svg/icon-circle.component';\r\n\r\nconst TabCell = (props) => {\r\n\t/**\r\n     * Rounds half a number to a bigger whole digit\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n\tconst getRoundedHalfANumber = (aNumber) => {\r\n\t\treturn Math.round(aNumber / 2);\r\n\t};\r\n\r\n\t/**\r\n     * Split the amount of dots into 2 lines if amount bigger than 2\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n\tconst getTopLineDotsAmount = () => {\r\n\t\treturn props.line > 2 ? getRoundedHalfANumber(props.line) : props.line;\r\n\t};\r\n\r\n\t/**\r\n     * Returns an Input className, all Inputs have the same,\r\n     * except Input for 100\r\n     * @return {String} className for Input field\r\n     */\r\n\tconst getInputClassName = () => {\r\n\t\treturn props.value < 100 ? 'component__input' : 'component__input component__input--hundreed';\r\n\t};\r\n\r\n\t// /**\r\n\t//  * Validate a key down event for the range of criteria\r\n\t//  * @param  {event} e a key down event\r\n\t//  * @return {boolean} validation state\r\n\t//  */\r\n\t// const applyKeyDown = e => {\r\n\r\n\t//     var value = true;\r\n\r\n\t//     /**\r\n\t//      * arrows up & down are allways denied\r\n\t//      * to prevent choosing right answer from keyboard\r\n\t//      */\r\n\t//     if (e.which === 38 || e.which === 40) {\r\n\t//         return true;\r\n\t//     }\r\n\r\n\t//     /** delete, backspace and tab are always allowed\r\n\t//      */\r\n\t//     if (e.which === 8  //backspace\r\n\t//         || e.which === 46 //delete\r\n\t//         || e.which === 9)  //tab\r\n\t//     {\r\n\t//         return false;\r\n\t//     }\r\n\r\n\t//     /** more than 2 digits in a 2-digits fields,\r\n\t//      * more than 3 digits in a 3-digits field\r\n\t//      * instant return to prevent overflowing\r\n\t//      */\r\n\t//     if ((e.target.max < 100 && e.target.value.length > 1) //length > 2\r\n\t//         || (e.target.max >= 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t//     // || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t//     {\r\n\t//         console.log(e.target.value, e.which, e.target.max, e.target.value.length);\r\n\t//         return true;\r\n\t//     }\r\n\r\n\t//     /** https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n\t//      * The problem with keyCode is to avoid the combined keys\r\n\t//      * with the numbers on top of keyboard, we must add a check\r\n\t//      *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n\t//      * such as e @ & \" { } ...\r\n\t//      */\r\n\t//     let key = Number(e.key)\r\n\t//     if (isNaN(key) || e.key === null || e.key === ' ') {\r\n\t//         // console.log(\"is not numeric\");\r\n\t//         value = true;\r\n\t//     }\r\n\t//     else {\r\n\t//         // console.log(\"is numeric\");\r\n\t//         value = false;\r\n\t//     }\r\n\r\n\t//     return value;\r\n\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Handles key-down event, runs key validation,\r\n\t//  * decline input of the key if invalid\r\n\t//  * @return {void}\r\n\t//  */\r\n\t// const handleKeyDown = (e) => {\r\n\r\n\t//     if (applyKeyDown(e)) {\r\n\r\n\t//         e.preventDefault();\r\n\t//     }\r\n\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<div className=\"component__input-box\">\r\n\t\t\t\t{/* <input\r\n                    type='number'\r\n                    pattern='[0-9]*'\r\n                    inputMode='numeric'\r\n                    className={getInputClassName()}\r\n                    placeholder=' '\r\n                    min={props.value}\r\n                    max={props.value}\r\n                    step='1'\r\n                    onKeyDown={\r\n                        (event) => handleKeyDown(event)\r\n                    }\r\n                /> */}\r\n\t\t\t\t<NumberInputField\r\n\t\t\t\t\tclassName={getInputClassName()}\r\n\t\t\t\t\tplaceholder=\" \"\r\n\t\t\t\t\tnumber={props.value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"component__score\">\r\n\t\t\t\t<div className=\"component__score-row\">\r\n\t\t\t\t\t{[ ...Array(getTopLineDotsAmount()) ].map((x, i) => (\r\n\t\t\t\t\t\t<IconCircle key={i} className={`component__icon ${content.styles[i + 1]}`} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"component__score-row\">\r\n\t\t\t\t\t{[ ...Array(props.line - getTopLineDotsAmount()) ].map((x, i) => (\r\n\t\t\t\t\t\t<IconCircle\r\n\t\t\t\t\t\t\tkey={i + getRoundedHalfANumber(props.line)}\r\n\t\t\t\t\t\t\tclassName={`component__icon ${content.styles[i + 1 + getRoundedHalfANumber(props.line)]}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TabCell;\r\n","import React from 'react';\r\n\r\nconst TabEmptyCell = props => {\r\n\r\n    return (\r\n        <div className='tab__empty-cell'>{props.sign}</div>\r\n    )\r\n};\r\n\r\nexport default TabEmptyCell;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport TabCell from '../../multiplication-tab/tab-cell/tab-cell.component';\r\nimport TabEmptyCell from '../tab-empty-cell/tab-empty-cell.component';\r\n\r\nconst TabLine = props => {\r\n\r\n    return (\r\n        <div className={`tab__line ${props.className}`}>\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <TabEmptyCell\r\n                                className='tab__empty-cell'\r\n                                sign={i >= 1 ? props.sign : ''}\r\n                            />\r\n                            <TabCell\r\n                                line={props.value}\r\n                                value={j * props.value}\r\n                            />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                else return null;\r\n            }\r\n            )}\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabLine;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport TabHeader from '../tab-header/tab-header.component';\r\nimport TabEmptyLine from '../tab-empty-line/tab-empty-line.component';\r\nimport TabLine from '../tab-line/tab-line.component';\r\n// import TabCell from '../tab-cell/tab-cell.component';\r\n\r\n\r\nconst Tab = props => {\r\n\r\n    return (\r\n        <main className='main'>\r\n            <section className='tab'>\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={'header-stick'}\r\n                />\r\n                <TabEmptyLine sign={props.sign} />\r\n                {[...Array(11)].map((x, i) =>\r\n                    i > 1 ?\r\n                        <TabLine\r\n                            key={i}\r\n                            className={content.styles[i]}\r\n                            value={i}\r\n                            subtract={props.subtract}\r\n                            sign={props.sign}\r\n                        />\r\n                        : null\r\n                )}\r\n                {/* <TabCell number={5} /> */}\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={''}\r\n                />\r\n            </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Tab;","import React from \"react\";\r\n\r\nconst IconBurger = ({ open, setOpen }) => {\r\n\r\n  return (\r\n    <div\r\n      className={`burger${open ? ' is-active' : ''}`}\r\n      onClick={() => setOpen()}\r\n    >\r\n      <span className=\"line\" />\r\n      <span className=\"line\" />\r\n      <span className=\"line\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBurger;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SlideBar = ({ open, links, hideSliderMenu }) => {\r\n\tconst element = (link, i) => (\r\n\t\t<Link key={i} to={link.link} className={`slide-bar__item ${link.className}`} onClick={() => hideSliderMenu()}>\r\n\t\t\t{link.name}\r\n\t\t</Link>\r\n\t);\r\n\r\n\tconst showLinks = (links) =>\r\n\t\tlinks.map((link, i) => {\r\n\t\t\treturn element(link, i);\r\n\t\t});\r\n\r\n\treturn <nav className={`slide-bar${open ? ' is-active' : ''}`}>{showLinks(links)}</nav>;\r\n};\r\n\r\nexport default SlideBar;\r\n","const SiteMenu = [\r\n  {\r\n    name: 'Multiplication table',\r\n    link: '/multiplay-react/multiplication-tab',\r\n    className: ''\r\n  },\r\n  // {\r\n  //   name: 'Addition/Subtraction',\r\n  //   link: '/multiplay-react/addition-subtraction',\r\n  //   className: ''\r\n  // },\r\n];\r\n\r\nexport default SiteMenu;\r\n","import React from 'react';\r\n\r\nimport BurgerIcon from '../burger icon/icon-burger.component';\r\nimport SlideBar from '../slide bar/slide-bar.component';\r\n\r\nimport siteMenu from '../siteMenu';\r\n\r\nconst NavigationBar = (props) => {\r\n\t/**\r\n   * Application navigation menu component\r\n   * \r\n   * \r\n   */\r\n\r\n\treturn (\r\n\t\t<div className=\"navigation\" ref={props.menuRef}>\r\n\t\t\t<BurgerIcon open={props.open} setOpen={props.setOpen} />\r\n\t\t\t<SlideBar open={props.open} links={siteMenu} hideSliderMenu={props.hideSliderMenu} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\n\r\nimport useClickOutside from '../../utils/use-click-outside/useClickOutside';\r\n\r\nimport Header from '../../components/headers/multiplication-tab/header.component';\r\nimport Footer from '../../components/footer/footer.component';\r\nimport Tab from '../../components/multiplication-tab/table/tab.component';\r\n\r\nimport NavigationBar from '../../components/navigation/navigation-bar/navigation-bar.component';\r\n\r\nconst MultiplicationTab = props => {\r\n\r\n    /**\r\n     * Single state hook useState for all the state properties\r\n     */\r\n    const [fullState, setFullState] = React.useState({\r\n        sticky: 0,\r\n        display: false,\r\n        subtract: false,\r\n        open: false\r\n    });\r\n\r\n    const menuRef = React.useRef();\r\n\r\n\tconst setOpen = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: !fullState.open\r\n\t\t});\r\n\t};\r\n\r\n\tconst hideSliderMenu = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: false\r\n\t\t});\r\n\t};\r\n  \r\n\t// useClickOutside(menuRef, hideSliderMenu);\r\n\r\n    // const setSubtract = () => {\r\n    //     console.log('setSubtract inside ===> ', fullState.subtract);\r\n\t// \tsetFullState({\r\n\t// \t\t...fullState,\r\n\t// \t\topen: !fullState.subtract\r\n\t// \t});\r\n\t// };\r\n\r\n    // const setChecked = () => {\r\n    //     console.log('setChecked inside ===> ', fullState.display);\r\n\t// \tsetFullState({\r\n\t// \t\t...fullState,\r\n\t// \t\tdisplay: !fullState.display\r\n\t// \t});\r\n\t// };\r\n\r\n    /**\r\n     * Returns mathematical sign for addition or subtraction\r\n     * @return {html entity} sign code\r\n     */\r\n    const getSign = () => {\r\n        return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n    }\r\n\r\n    /**\r\n     * Gets and returns offsetTop of the 'header-stick' section\r\n     * @return {Number} offsetTop\r\n     */\r\n    const getHeaderOffsetTop = () => {\r\n        const header = document.getElementById('header-stick');\r\n        if (header) {\r\n            return header.offsetTop;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Empty all the table inputs\r\n    * @return {void} \r\n    */\r\n    const emptyInputs = () => {\r\n        let inputs = document.getElementsByClassName('component__input');\r\n        // console.log(typeof(inputs))\r\n        inputs = Array.from(inputs);\r\n        inputs.map(input => input.value = '')\r\n    };\r\n\r\n    /**\r\n     * React hook useEffect for updating sticky state property\r\n     * on display property changing\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        setFullState({\r\n            ...fullState,\r\n            sticky: getHeaderOffsetTop()\r\n        })\r\n\r\n    }, [fullState.display]);\r\n\r\n    /**\r\n     * React hook useEffect for stick header on scrolling\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        const scrollCallBack = window.addEventListener('scroll', () => {\r\n            const header = document.getElementById('header-stick');\r\n            // console.log('header from useEffect ===> ', header);\r\n            if (header) {\r\n                if (window.pageYOffset >= fullState.sticky) { //sticky) {\r\n                    header.classList.add('sticky');\r\n                } else {\r\n                    header.classList.remove('sticky');\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n    * React hook useEffect for updating sticky state property\r\n    * on resizing\r\n    */\r\n    React.useEffect(() => {\r\n\r\n        const resizeCallBack = window.addEventListener('resize', () => {\r\n            setFullState({\r\n                ...fullState,\r\n                sticky: getHeaderOffsetTop()\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n     * React hook useEffect for empty input when toggle addition/subtraction\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        emptyInputs();\r\n\r\n    }, [fullState.subtract]);\r\n\r\n    // console.log('fullState.display from multiplication tab component ===> ', fullState.display);\r\n    // console.log('fullState.subtract from multiplication tab component ===> ', fullState.subtract);\r\n\r\n    return (\r\n        <>\r\n        \t<NavigationBar open={fullState.open} setOpen={setOpen} hideSliderMenu={hideSliderMenu} menuRef={menuRef} />\r\n            <Header\r\n                display={fullState.display}\r\n                subtract={fullState.subtract}\r\n                // setChecked={setChecked}\r\n                setChecked={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        display: !fullState.display\r\n                    })\r\n                }\r\n                // setSubtract={setSubtract}\r\n                setSubtract={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        subtract: !fullState.subtract\r\n                    })\r\n                }\r\n            />\r\n            <Tab\r\n                sticky={fullState.sticky}\r\n                subtract={fullState.subtract}\r\n                sign={getSign()}\r\n            />\r\n            <Footer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MultiplicationTab;","import React from 'react';\r\n\r\n// import IconChevronDown from '../../icons-svg/icon-chevron-down.component';\r\n\r\n// import Toggler from '../../toggler/toggler.component';\r\n\r\n// const content = {\r\n//     togglerAddSubtract: {\r\n//         toggleBox: {\r\n//             className: 'add-subtract-toggle__box'\r\n//         },\r\n//         label: {\r\n//             htmlFor: 'addition-subtraction',\r\n//             span: {\r\n//                 left: {\r\n//                     className: 'header__description',\r\n//                     text: 'addition',\r\n//                 },\r\n//                 right: {\r\n//                     className: 'header__description',\r\n//                     text: 'subtraction',\r\n//                 }\r\n//             }\r\n//         },\r\n//         input: {\r\n//             type: 'checkbox',\r\n//             className: 'add-subtract-toggle__input',\r\n//             id: 'addition-subtraction',\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst Header = props => {\r\n\r\n    // const showCollapsible = () => {\r\n    //     return props.display ?\r\n    //         <div className='collapsible__part'>\r\n    //             <hr className='header__hr' />\r\n    //             <p className='header__description'>\r\n    //                 {\r\n    //                     props.subtract ? \r\n    //                     `- Subtract the amount of dots under the field from the number from the left.`\r\n    //                     : \r\n    //                     `- Add the amount of dots under the field to the number from the left.`\r\n    //                 }\r\n    //                     <br />\r\n    //                     - Write an answer at the field above.<br />\r\n    //                         - Right answer colors <b>white</b>.<br />\r\n    //                             - Wrong answer colors <span className='three'><b>red</b></span>.<br />\r\n    //                                 - Move to the next field and repeate.\r\n    //             </p>\r\n    //         </div>\r\n    //         : null\r\n    // }\r\n\r\n    return (\r\n\r\n        <header className='header'>\r\n            <h1 className='header__title'>\r\n                Addition and Subtraction\r\n            </h1>\r\n            <h3 className='header__title--small'>train your skill of addition and subtraction</h3>\r\n            <hr className='header__hr' />\r\n            {/* <div className='collapsible'>\r\n                <h3 className='collapsible__title header__title--small'>How to use</h3>\r\n                <input\r\n                    type='checkbox'\r\n                    className='collapsible__btn'\r\n                    id='collapsible-toggle'\r\n                    checked={props.display}\r\n                    onChange={() => props.setChecked()}\r\n                />\r\n                <label htmlFor='collapsible-toggle' className='collapsible__icon-box'>\r\n                    <IconChevronDown className='collapsible__icon' />\r\n                </label>\r\n                {showCollapsible()}\r\n                <hr className='header__hr' />\r\n                <Toggler\r\n                    {...content.togglerAddSubtract}\r\n                    checked={props.subtract}\r\n                    onChange={() => props.setSubtract()}\r\n                />\r\n                <hr className='header__hr' />\r\n            </div> */}\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nconst Number = props => {\r\n  return (\r\n    <span className={props.className}>\r\n      {[ ...props.number.toString() ].map((digit, index) => (\r\n        <span className={`${content.styles[digit]}`} key={index}>\r\n          {digit}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Number;","import React from 'react';\r\n\r\nconst Sign = (props) => {\r\n\treturn <span className={props.className}>{props.sign}</span>;\r\n};\r\n\r\nexport default Sign;\r\n","import React from 'react';\r\n\r\nimport Number from '../../number/number.component';\r\nimport Sign from '../../sign/sign.component';\r\nimport NumberInputField from '../../input-fields/number-input-field.component';\r\n// import content from '../../../table.content';\r\n\r\nconst Problem = (props) => {\r\n\r\n\r\n\t// const renderNumber = (number) => {\r\n\t// \treturn (\r\n\t// \t\t<span className=\"problem__digit\">\r\n\t// \t\t\t{[ ...number ].map((digit, index) => (\r\n\t// \t\t\t\t<span className={`${content.styles[digit]}`} key={index}>\r\n\t// \t\t\t\t\t{digit}\r\n\t// \t\t\t\t</span>\r\n\t// \t\t\t))}\r\n\t// \t\t</span>\r\n\t// \t);\r\n\t// };\r\n\r\n\t// const renderSign = (sign) => {\r\n\t// \treturn <span className=\"problem__sign\">{sign}</span>;\r\n\t// };\r\n\r\n\t// const renderInput = (number) => {\r\n\t// \treturn (\r\n\t// \t\t<input\r\n\t// \t\t\ttype=\"number\"\r\n\t// \t\t\tpattern=\"[0-9]*\"\r\n\t// \t\t\tinputMode=\"numeric\"\r\n\t// \t\t\tclassName=\"problem__input\"\r\n\t// \t\t\tplaceholder=\" \"\r\n\t// \t\t\tmin={parseInt(number)}\r\n\t// \t\t\tmax={parseInt(number)}\r\n\t// \t\t\tstep=\"1\"\r\n\t// \t\t\t// onKeyDown={(event) => handleKeyDown(event)}\r\n\t// \t\t/>\r\n\t// \t);\r\n\t// };\r\n\r\n\t// console.log('problem from problem.component ====> ', props.content);\r\n\r\n\tconst renderProblem = props.content.map((operand, i) => {\r\n\t\tlet renderedElement = null;\r\n\r\n\t\tswitch (operand.type) {\r\n\t\t\tcase 'operand':\r\n\t\t\t\trenderedElement = <Number number={operand.value} className=\"problem__digit\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sign':\r\n\t\t\t\trenderedElement = <Sign sign={operand.value} className=\"problem__sign\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\t\trenderedElement = <NumberInputField number={operand.value} className=\"problem__input\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn renderedElement;\r\n\t});\r\n\r\n\t// const renderNumber = (number) => {\r\n\r\n\t// \t// console.log([ ...number ].forEach((c) => console.log(c)));\r\n\t// \t// const style = number.charAt(0);\r\n\t// \treturn [ ...number ].map((digit, index) => (\r\n\t// \t\t// <span className={`problem_x digit ${content.styles[style]}`} key={index}>\r\n\t// \t\t<span className={`problem_x problem__digit ${content.styles[digit]}`} key={index}>\r\n\t// \t\t\t{digit}\r\n\t// \t\t</span>\r\n\t// \t));\r\n\t// };\r\n\r\n\treturn (\r\n\t\t// <>\r\n\t\t<div className=\"problem\">\r\n\t\t\t{renderProblem}\r\n\t\t\t{/* {renderNumber(props.x)}\r\n\t\t\t{renderSign(props.sign)}\r\n\t\t\t{renderNumber(props.y)}\r\n\t\t\t{renderSign('=')}\r\n\t\t\t{renderInput(getSum(props.x, props.y))} */}\r\n\t\t</div>\r\n\t\t// </>\r\n\t);\r\n};\r\n\r\nexport default Problem;\r\n","import React from 'react';\r\n\r\nimport Problem from '../problem/problem.component';\r\n\r\nconst Problems = (props) => {\r\n\t// /**\r\n\t//  * Single state hook useState for all the state properties\r\n\t//  */\r\n\t// const [fullState, setFullState] = React.useState({\r\n\t//     sticky: 0,\r\n\t//     display: false,\r\n\t//     subtract: false,\r\n\t// });\r\n\r\n\t// /**\r\n\t//  * Returns mathematical sign for addition or subtraction\r\n\t//  * @return {html entity} sign code\r\n\t//  */\r\n\t// const getSign = () => {\r\n\t//     return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Gets and returns offsetTop of the 'header-stick' section\r\n\t//  * @return {Number} offsetTop\r\n\t//  */\r\n\t// const getHeaderOffsetTop = () => {\r\n\t//     const header = document.getElementById('header-stick');\r\n\t//     return header.offsetTop;\r\n\t// };\r\n\r\n\t// /**\r\n\t// * Empty all the table inputs\r\n\t// * @return {void}\r\n\t// */\r\n\t// const emptyInputs = () => {\r\n\t//     let inputs = document.getElementsByClassName('component__input');\r\n\t//     // console.log(typeof(inputs))\r\n\t//     inputs = Array.from(inputs);\r\n\t//     inputs.map(input => {\r\n\t//         input.value = '';\r\n\t//     })\r\n\t// };\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for updating sticky state property\r\n\t//  * on display property changing\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     setFullState({\r\n\t//         ...fullState,\r\n\t//         sticky: getHeaderOffsetTop()\r\n\t//     })\r\n\r\n\t// }, [fullState.display]);\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for stick header on scrolling\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     const scrollCallBack = window.addEventListener('scroll', () => {\r\n\t//         const header = document.getElementById('header-stick');\r\n\t//         if (window.pageYOffset >= fullState.sticky) { //sticky) {\r\n\t//             header.classList.add('sticky');\r\n\t//         } else {\r\n\t//             header.classList.remove('sticky');\r\n\t//         }\r\n\t//     });\r\n\r\n\t//     return () => {\r\n\t//         window.removeEventListener('scroll', scrollCallBack);\r\n\t//     };\r\n\t// }, [fullState.sticky]);\r\n\r\n\t// /**\r\n\t// * React hook useEffect for updating sticky state property\r\n\t// * on resizing\r\n\t// */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     const resizeCallBack = window.addEventListener('resize', () => {\r\n\t//         setFullState({\r\n\t//             ...fullState,\r\n\t//             sticky: getHeaderOffsetTop()\r\n\t//         })\r\n\t//     });\r\n\r\n\t//     return () => {\r\n\t//         window.removeEventListener('resize', resizeCallBack);\r\n\t//     };\r\n\t// }, [fullState.sticky]);\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for empty input when toggle addition/subtraction\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     emptyInputs();\r\n\r\n\t// }, [fullState.subtract]);\r\n\r\n  // console.log('props.problems from problems component ===> ', props.problems);\r\n\t/**\r\n   * The following algorithm explained in details at:\r\n   * https://stackoverflow.com/questions/42391499/react-render-new-row-every-4th-column\r\n   */\r\n\r\n\t// const colPerRow = props.columns;\r\n\t// const colPerRow = 2;\r\n\r\n\t/**\r\n   * array of @cols elements, where @cols is the number of rows needed\r\n   * @arr <Array> - the given array of rendering elements\r\n   * @cols <Number> - the number of columns in a row\r\n   */\r\n\tconst rows = (arr, cols) => [ ...Array(Math.ceil(arr.length / cols)) ];\r\n\r\n\t// chunk the products into the array of rows\r\n\tconst contentRows = (arr, cols) => rows(arr, cols).map((row, idx) => arr.slice(idx * cols, idx * cols + cols));\r\n\t\r\n\tconst getContent = contentRows(props.problems, props.columns).map((row, i) => (\r\n\t// const getContent = contentRows(props.problems.additions, colPerRow).map((row, i) => (\r\n\t\t<div key={i} className=\"problem__row\">\r\n\t\t\t{row.map((problem, j) => <Problem key={j} content={problem} x={problem.x} y={problem.y} sign={`+`} />)}\r\n\t\t</div>\r\n\t));\r\n\r\n\t// const getContent = () => {\r\n\t// \t// return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n\r\n\t// \t// console.log('props.data from problem.component ===> ', props.data)\r\n\r\n\t// \treturn contentRows(props.problems.additions, colPerRow).map((problem, i) => {\r\n\t//     // console.log(problem);\r\n\t// \t// return props.problems.additions.map((problem, i) => {\r\n\t// \t\treturn <Problem key={i} x={problem.x} y={problem.y} sign={`+`} />;\r\n\t// \t});\r\n\t// };\r\n\r\n\treturn <div className=\"problems\">{getContent}</div>;\r\n};\r\n\r\nexport default Problems;\r\n","import React from 'react';\r\n\r\nimport useClickOutside from '../../utils/use-click-outside/useClickOutside';\r\n\r\nimport Header from '../../components/headers/addition-subtraction/header.component';\r\nimport Footer from '../../components/footer/footer.component';\r\nimport Problems from '../../components/addition-subtraction/problems/problems.component';\r\n\r\nimport random from '../../components/math/randoms/random-integer-in-a-range';\r\nimport NavigationBar from '../../components/navigation/navigation-bar/navigation-bar.component';\r\n\r\nconst AdditionSubtraction = (props) => {\r\n\tconst problems = [\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 10\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 5\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '('\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 5\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '*'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 5\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: ')'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 40\r\n\t\t\t}\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 10\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 5\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 15\r\n\t\t\t}\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 15\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '-'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 5\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 10\r\n\t\t\t}\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 15\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 14\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 29\r\n\t\t\t}\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 46\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 23\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 69\r\n\t\t\t}\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 863\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '+'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'operand',\r\n\t\t\t\tvalue: 2549\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'sign',\r\n\t\t\t\tvalue: '='\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: 'input',\r\n\t\t\t\tvalue: 3412\r\n\t\t\t}\r\n\t\t]\r\n\t];\r\n\r\n\t/**\r\n     * Single state hook useState for all the state properties\r\n     */\r\n\tconst [ fullState, setFullState ] = React.useState({\r\n\t\taddition_problems: 5,\r\n\t\taddend_one_from: 2,\r\n\t\taddend_one_to: 2,\r\n\t\taddend_two_from: 2,\r\n\t\taddend_two_to: 2,\r\n\t\tsubtraction_problems: 5,\r\n\t\tminuend_from: 2,\r\n\t\tminuend_to: 2,\r\n\t\tsubtrahend_from: 2,\r\n\t\tsubtrahend_to: 2,\r\n\t\tnumber_of_problems: 10,\r\n\t\tcolumns_per_row: 2,\r\n\t\topen: false\r\n\t});\r\n\r\n\tconst menuRef = React.useRef();\r\n\r\n\tconst setState = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: !fullState.open\r\n\t\t});\r\n\t};\r\n\r\n\tconst hideSliderMenu = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: false\r\n\t\t});\r\n\t};\r\n\r\n\tuseClickOutside(menuRef, hideSliderMenu);\r\n\r\n\t// /**\r\n\t//  * Returns mathematical sign for addition or subtraction\r\n\t//  * @return {html entity} sign code\r\n\t//  */\r\n\t// const getSign = () => {\r\n\t//     return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Gets and returns offsetTop of the 'header-stick' section\r\n\t//  * @return {Number} offsetTop\r\n\t//  */\r\n\t// const getHeaderOffsetTop = () => {\r\n\t//     const header = document.getElementById('header-stick');\r\n\t//     return header.offsetTop;\r\n\t// };\r\n\r\n\t// /**\r\n\t// * Empty all the table inputs\r\n\t// * @return {void}\r\n\t// */\r\n\t// const emptyInputs = () => {\r\n\t//     let inputs = document.getElementsByClassName('component__input');\r\n\t//     // console.log(typeof(inputs))\r\n\t//     inputs = Array.from(inputs);\r\n\t//     inputs.map(input => {\r\n\t//         input.value = '';\r\n\t//     })\r\n\t// };\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for updating sticky state property\r\n\t//  * on display property changing\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     setFullState({\r\n\t//         ...fullState,\r\n\t//         sticky: getHeaderOffsetTop()\r\n\t//     })\r\n\r\n\t// }, [fullState.display]);\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for stick header on scrolling\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     const scrollCallBack = window.addEventListener('scroll', () => {\r\n\t//         const header = document.getElementById('header-stick');\r\n\t//         if (window.pageYOffset >= fullState.sticky) { //sticky) {\r\n\t//             header.classList.add('sticky');\r\n\t//         } else {\r\n\t//             header.classList.remove('sticky');\r\n\t//         }\r\n\t//     });\r\n\r\n\t//     return () => {\r\n\t//         window.removeEventListener('scroll', scrollCallBack);\r\n\t//     };\r\n\t// }, [fullState.sticky]);\r\n\r\n\t// /**\r\n\t// * React hook useEffect for updating sticky state property\r\n\t// * on resizing\r\n\t// */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     const resizeCallBack = window.addEventListener('resize', () => {\r\n\t//         setFullState({\r\n\t//             ...fullState,\r\n\t//             sticky: getHeaderOffsetTop()\r\n\t//         })\r\n\t//     });\r\n\r\n\t//     return () => {\r\n\t//         window.removeEventListener('resize', resizeCallBack);\r\n\t//     };\r\n\t// }, [fullState.sticky]);\r\n\r\n\t// /**\r\n\t//  * React hook useEffect for empty input when toggle addition/subtraction\r\n\t//  */\r\n\t// React.useEffect(() => {\r\n\r\n\t//     emptyInputs();\r\n\r\n\t// }, [fullState.subtract]);\r\n\r\n\tconsole.log('random numbers from addition-subtraction page ===> ', random(0, 99));\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<NavigationBar open={fullState.open} setOpen={setState} hideSliderMenu={hideSliderMenu} menuRef={menuRef} />\r\n\t\t\t<Header\r\n\t\t\t\tdisplay={fullState.display}\r\n\t\t\t\tsubtract={fullState.subtract}\r\n\t\t\t\tsetChecked={() =>\r\n\t\t\t\t\tsetFullState({\r\n\t\t\t\t\t\t...fullState,\r\n\t\t\t\t\t\tdisplay: !fullState.display\r\n\t\t\t\t\t})}\r\n\t\t\t\tsetSubtract={() =>\r\n\t\t\t\t\tsetFullState({\r\n\t\t\t\t\t\t...fullState,\r\n\t\t\t\t\t\tsubtract: !fullState.subtract\r\n\t\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t\t<main className=\"problem__main\">\r\n\t\t\t\t<Problems problems={problems} columns={fullState.columns_per_row} />\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AdditionSubtraction;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MultiplicationTab from './pages/multiplication-tab/multiplication-tab.page';\nimport AdditionSubtraction from './pages/addition-subtraction/addition-subtraction.page';\n\n// import PrivateRoute from './hoc/private-route/private-route.hoc';\n// import PublicRoute from './hoc/public-route/public-route.hoc';\n\n\n/**\n * router adapted for github pages, see detailed eplanations at:\n * https://stackoverflow.com/questions/57883297/deploying-reactjs-website-on-github-pages-with-routing-results-in-404-error-on-r\n */\nconst Routes = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/multiplay-react\" exact component={MultiplicationTab} />\n\t\t\t{/* <Route exact path=\"/\" render={() => <Redirect to=\"/multiplication-tab\" />} /> */}\n\t\t\t<Route path=\"/multiplay-react/multiplication-tab\" exact component={MultiplicationTab} />\n\t\t\t<Route path=\"/multiplay-react/addition-subtraction\" exact component={AdditionSubtraction} />\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport Routes from './routes';\n\n// import App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    {/* <App /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}