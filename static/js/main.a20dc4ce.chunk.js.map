{"version":3,"sources":["components/icons-svg/icon-chevron-down.component.jsx","components/toggler/toggler.component.jsx","components/header/header.component.jsx","components/icons-svg/icon-heart.component.jsx","components/icons-svg/icon-lx-kish.component.jsx","components/footer/footer.component.jsx","table.content.js","components/tab-header/tab-header.component.jsx","components/tab-empty-line/tab-empty-line.component.jsx","components/icons-svg/icon-circle.component.jsx","components/tab-cell/tab-cell.component.jsx","components/tab-empty-cell/tab-empty-cell.component.jsx","components/tab-line/tab-line.component.jsx","components/table/tab.component.jsx","pages/main-page/main-page.page.jsx","App.js","index.js"],"names":["IconChevronDown","props","className","xmlns","width","height","viewBox","d","Toggler","toggleBox","htmlFor","label","span","left","text","input","checked","onChange","right","content","type","id","Header","display","setChecked","subtract","setSubtract","IconHeart","IconLxKish","aria-labelledby","points","Footer","TabContent","styles","1","2","3","4","5","6","7","8","9","10","TabHeader","Array","map","x","i","j","Fragment","key","sign","EmptyLine","IconCircle","TabCell","getRoundedHalfANumber","aNumber","Math","round","getTopLineDotsAmount","line","handleKeyDown","e","which","target","max","value","length","console","log","Number","isNaN","applyKeyDown","preventDefault","pattern","inputMode","placeholder","min","step","onKeyDown","event","TabEmptyCell","TabLine","Tab","MainPage","React","useState","sticky","fullState","setFullState","getHeaderOffsetTop","document","getElementById","offsetTop","useEffect","scrollCallBack","window","addEventListener","header","pageYOffset","classList","add","remove","removeEventListener","resizeCallBack","inputs","getElementsByClassName","from","emptyInputs","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a20dc4ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IconChevronDown = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconChevronDown;","import React from 'react';\r\n\r\nconst Toggler = props => {\r\n\r\n    return (\r\n        <div className={props.toggleBox.className}>\r\n            <label htmlFor={props.label.htmlFor}>\r\n                <span className={props.label.span.left.className}>{props.label.span.left.text}</span>\r\n                <input\r\n                    {...props.input}\r\n                    checked={props.checked}\r\n                    onChange={props.onChange}\r\n                    // type='checkbox'\r\n                    // className='add-subtract-toggle__input'\r\n                    // id='addition-subtraction'\r\n                    // checked={props.subtract}\r\n                    // onChange={() => props.setSubtract()}\r\n                />\r\n                <span className={props.label.span.right.className}>{props.label.span.right.text}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toggler;","import React from 'react';\r\n\r\nimport IconChevronDown from '../icons-svg/icon-chevron-down.component';\r\n\r\nimport Toggler from '../toggler/toggler.component';\r\n\r\nconst content = {\r\n    togglerAddSubtract: {\r\n        toggleBox: {\r\n            className: 'add-subtract-toggle__box'\r\n        },\r\n        label: {\r\n            htmlFor: 'addition-subtraction',\r\n            span: {\r\n                left: {\r\n                    className: 'header__description',\r\n                    text: 'addition',\r\n                },\r\n                right: {\r\n                    className: 'header__description',\r\n                    text: 'subtraction',\r\n                }\r\n            }\r\n        },\r\n        input: {\r\n            type: 'checkbox',\r\n            className: 'add-subtract-toggle__input',\r\n            id: 'addition-subtraction',\r\n        }\r\n    }\r\n}\r\n\r\nconst Header = props => {\r\n\r\n    const showCollapsible = () => {\r\n        return props.display ?\r\n            <div className='collapsible__part'>\r\n                <hr className='header__hr' />\r\n                <p className='header__description'>\r\n                    {\r\n                        props.subtract ? \r\n                        `- Subtract the amount of dots under the field from the number from the left.`\r\n                        : \r\n                        `- Add the amount of dots under the field to the number from the left.`\r\n                    }\r\n                        <br />\r\n                        - Write an answer at the field above.<br />\r\n                            - Right answer colors <b>white</b>.<br />\r\n                                - Wrong answer colors <span className='three'><b>red</b></span>.<br />\r\n                                    - Move to the next field and repeate.\r\n                </p>\r\n            </div>\r\n            : null\r\n    }\r\n\r\n    return (\r\n\r\n        <header className='header'>\r\n            <h1 className='header__title'>\r\n                Multiply me\r\n            </h1>\r\n            <h3 className='header__title--small'>learn multiplication by addition and subtraction</h3>\r\n            <div className='collapsible'>\r\n                <hr className='header__hr' />\r\n                <h3 className='collapsible__title header__title--small'>How to use</h3>\r\n                <input\r\n                    type='checkbox'\r\n                    className='collapsible__btn'\r\n                    id='collapsible-toggle'\r\n                    checked={props.display}\r\n                    onChange={() => props.setChecked()}\r\n                />\r\n                <label htmlFor='collapsible-toggle' className='collapsible__icon-box'>\r\n                    <IconChevronDown className='collapsible__icon' />\r\n                </label>\r\n                {showCollapsible()}\r\n                <hr className='header__hr' />\r\n                <Toggler\r\n                    {...content.togglerAddSubtract}\r\n                    checked={props.subtract}\r\n                    onChange={() => props.setSubtract()}\r\n                />\r\n                <hr className='header__hr' />\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst IconHeart = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M23.6 2c-3.363 0-6.258 2.736-7.599 5.594-1.342-2.858-4.237-5.594-7.601-5.594-4.637 0-8.4 3.764-8.4 8.401 0 9.433 9.516 11.906 16.001 21.232 6.13-9.268 15.999-12.1 15.999-21.232 0-4.637-3.763-8.401-8.4-8.401z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconHeart;","import React from 'react';\r\n\r\nconst IconLxKish = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 60 60\" aria-labelledby=\"title\">\r\n            <title id=\"title\">Lx Kish Logo</title>\r\n            <polygon points=\"1 8 8 1 8 52 59 52 52 59 1 59\" />\r\n            <polygon points=\"15.75 13.5 22.5 6.75 52.25 36.5 45.5 43.25\" />\r\n            <polygon points=\"15.75 36.5 45.5 6.75 52.25 13.5 22.5 43.25\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconLxKish;","import React from 'react';\r\n\r\nimport IconHeart from '../icons-svg/icon-heart.component';\r\nimport IconLxKish from '../icons-svg/icon-lx-kish.component';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className='footer'>\r\n            <p className='footer__credentials'>\r\n                Built with\r\n                <span className='footer__icon-box'>\r\n                    <IconHeart className='footer__icon three' />\r\n                </span>\r\n                by\r\n                <span className='footer__icon-box'>\r\n                    <IconLxKish className='footer__icon seven' />\r\n                </span>\r\n                Alexander Kish\r\n            </p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","const TabContent = {\r\n    styles: {\r\n        1: 'one',\r\n        2: 'two',\r\n        3: 'three',\r\n        4: 'four',\r\n        5: 'five',\r\n        6: 'six',\r\n        7: 'seven',\r\n        8: 'eight',\r\n        9: 'nine',\r\n        10: 'ten'\r\n    }\r\n\r\n}\r\n\r\nexport default TabContent;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nconst TabHeader = props => {\r\n\r\n    return (\r\n\r\n        <div className='tab__line--header' id={props.id}>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <div className='tab__empty-cell tab__empty-cell--head'>{props.sign}</div>\r\n                            <div className={`tab__heading-cell ${content.styles[j]}`}>{j}</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n            )}\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default TabHeader;","import React from 'react';\r\n\r\nconst EmptyLine = props => {\r\n\r\n    return (\r\n        <div className='tab__line--empty-stick'>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>{props.sign}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EmptyLine;","import React from 'react';\r\n\r\nconst IconCircle = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M24 14c0 6.625-5.375 12-12 12s-12-5.375-12-12 5.375-12 12-12 12 5.375 12 12z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconCircle;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport IconCircle from '../icons-svg/icon-circle.component';\r\n\r\nconst TabCell = props => {\r\n\r\n    /**\r\n     * Rounds half a number to a bigger whole digit\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n    const getRoundedHalfANumber = aNumber => {\r\n        return Math.round(aNumber / 2);\r\n    }\r\n\r\n    /**\r\n     * Split the amount of dots into 2 lines if amount bigger than 2\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n    const getTopLineDotsAmount = () => {\r\n        return props.line > 2 ? getRoundedHalfANumber(props.line) : props.line;\r\n    }\r\n\r\n    /**\r\n     * Returns an Input className, all Inputs have the same,\r\n     * except Input for 100\r\n     * @return {String} className for Input field\r\n     */\r\n    const getInputClassName = () => {\r\n        return props.value < 100 ?\r\n            'component__input' :\r\n            'component__input component__input--hundreed';\r\n    }\r\n\r\n    /**\r\n     * Validate a key down event for the range of criteria\r\n     * @param  {event} e a key down event\r\n     * @return {boolean} validation state\r\n     */\r\n    const applyKeyDown = e => {\r\n\r\n        var value = true;\r\n\r\n        /**\r\n         * arrows up & down are allways denied\r\n         * to prevent choosing right answer from keyboard \r\n         */\r\n        if (e.which === 38 || e.which === 40) {\r\n            return true;\r\n        }\r\n\r\n        /** delete, backspace and tab are always allowed \r\n         */\r\n        if (e.which === 8  //backspace\r\n            || e.which === 46 //delete\r\n            || e.which === 9)  //tab\r\n        {\r\n            return false;\r\n        }\r\n\r\n        /** more than 2 digits in a 2-digits fields,\r\n         * more than 3 digits in a 3-digits field\r\n         * instant return to prevent overflowing\r\n         */\r\n        if ((e.target.max < 100 && e.target.value.length > 1) //length > 2\r\n            || (e.target.max >= 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n        // || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n        {\r\n            console.log(e.target.value, e.which, e.target.max, e.target.value.length);\r\n            return true;\r\n        }\r\n\r\n        /** https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n         * The problem with keyCode is to avoid the combined keys\r\n         * with the numbers on top of keyboard, we must add a check\r\n         *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n         * such as e @ & \" { } ...\r\n         */\r\n        let key = Number(e.key)\r\n        if (isNaN(key) || e.key === null || e.key === ' ') {\r\n            // console.log(\"is not numeric\");\r\n            value = true;\r\n        }\r\n        else {\r\n            // console.log(\"is numeric\");\r\n            value = false;\r\n        }\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles key-down event, runs key validation, \r\n     * decline input of the key if invalid\r\n     * @return {void}\r\n     */\r\n    const handleKeyDown = (e) => {\r\n\r\n        if (applyKeyDown(e)) {\r\n\r\n            e.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='component'>\r\n            <div className='component__input-box'>\r\n                <input\r\n                    type='number'\r\n                    pattern='[0-9]*'\r\n                    inputMode='numeric'\r\n                    className={getInputClassName()}\r\n                    placeholder=' '\r\n                    min={props.value}\r\n                    max={props.value}\r\n                    step='1'\r\n                    onKeyDown={\r\n                        (event) => handleKeyDown(event)\r\n                    }\r\n                />\r\n            </div>\r\n            <div className='component__score'>\r\n                <div className=\"component__score-row\">\r\n                    {[...Array(getTopLineDotsAmount())].map((x, i) =>\r\n                        <IconCircle\r\n                            key={i}\r\n                            className={`component__icon ${content.styles[i + 1]}`}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className=\"component__score-row\">\r\n                    {[...Array(props.line - getTopLineDotsAmount())].map((x, i) =>\r\n                        <IconCircle\r\n                            key={i + getRoundedHalfANumber(props.line)}\r\n                            className={`component__icon ${content.styles[i + 1 + getRoundedHalfANumber(props.line)]}`}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabCell; ","import React from 'react';\r\n\r\nconst TabEmptyCell = props => {\r\n\r\n    return (\r\n        <div className='tab__empty-cell'>{props.sign}</div>\r\n    )\r\n};\r\n\r\nexport default TabEmptyCell;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport TabCell from '../../components/tab-cell/tab-cell.component';\r\nimport TabEmptyCell from '../../components/tab-empty-cell/tab-empty-cell.component';\r\n\r\nconst TabLine = props => {\r\n\r\n    return (\r\n        <div className={`tab__line ${props.className}`}>\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <TabEmptyCell\r\n                                className='tab__empty-cell'\r\n                                sign={i >= 1 ? props.sign : ''}\r\n                            />\r\n                            <TabCell\r\n                                line={props.value}\r\n                                value={j * props.value}\r\n                            />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n            )}\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabLine;","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nimport TabHeader from '../tab-header/tab-header.component';\r\nimport TabEmptyLine from '../tab-empty-line/tab-empty-line.component';\r\nimport TabLine from '../tab-line/tab-line.component';\r\n// import TabCell from '../tab-cell/tab-cell.component';\r\n\r\n\r\nconst Tab = props => {\r\n\r\n    return (\r\n        <main className='main'>\r\n            <section className='tab'>\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={'header-stick'}\r\n                />\r\n                <TabEmptyLine sign={props.sign} />\r\n                {[...Array(11)].map((x, i) =>\r\n                    i > 1 ?\r\n                        <TabLine\r\n                            key={i}\r\n                            className={content.styles[i]}\r\n                            value={i}\r\n                            subtract={props.subtract}\r\n                            sign={props.sign}\r\n                        />\r\n                        : null\r\n                )}\r\n                {/* <TabCell number={5} /> */}\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={''}\r\n                />\r\n            </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Tab;","import React from 'react';\r\n\r\nimport Header from '../../components/header/header.component';\r\nimport Footer from '../../components/footer/footer.component';\r\nimport Tab from '../../components/table/tab.component';\r\n\r\nconst MainPage = props => {\r\n\r\n    /**\r\n     * Single state hook useState for all the state properties\r\n     */\r\n    const [fullState, setFullState] = React.useState({\r\n        sticky: 0,\r\n        display: false,\r\n        subtract: false,\r\n    });\r\n\r\n    /**\r\n     * Returns mathematical sign for addition or subtraction\r\n     * @return {html entity} sign code\r\n     */\r\n    const getSign = () => {\r\n        return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n    }\r\n\r\n    /**\r\n     * Gets and returns offsetTop of the 'header-stick' section\r\n     * @return {Number} offsetTop\r\n     */\r\n    const getHeaderOffsetTop = () => {\r\n        const header = document.getElementById('header-stick');\r\n        return header.offsetTop;\r\n    };\r\n\r\n    /**\r\n    * Empty all the table inputs\r\n    * @return {void} \r\n    */\r\n    const emptyInputs = () => {\r\n        let inputs = document.getElementsByClassName('component__input');\r\n        // console.log(typeof(inputs))\r\n        inputs = Array.from(inputs);\r\n        inputs.map(input => {\r\n            input.value = '';\r\n        })\r\n    };\r\n\r\n    /**\r\n     * React hook useEffect for updating sticky state property\r\n     * on display property changing\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        setFullState({\r\n            ...fullState,\r\n            sticky: getHeaderOffsetTop()\r\n        })\r\n\r\n    }, [fullState.display]);\r\n\r\n    /**\r\n     * React hook useEffect for stick header on scrolling\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        const scrollCallBack = window.addEventListener('scroll', () => {\r\n            const header = document.getElementById('header-stick');\r\n            if (window.pageYOffset >= fullState.sticky) { //sticky) {\r\n                header.classList.add('sticky');\r\n            } else {\r\n                header.classList.remove('sticky');\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n    * React hook useEffect for updating sticky state property\r\n    * on resizing\r\n    */\r\n    React.useEffect(() => {\r\n\r\n        const resizeCallBack = window.addEventListener('resize', () => {\r\n            setFullState({\r\n                ...fullState,\r\n                sticky: getHeaderOffsetTop()\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n     * React hook useEffect for empty input when toggle addition/subtraction\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        emptyInputs();\r\n\r\n    }, [fullState.subtract]);\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                display={fullState.display}\r\n                subtract={fullState.subtract}\r\n                setChecked={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        display: !fullState.display\r\n                    })\r\n                }\r\n                setSubtract={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        subtract: !fullState.subtract\r\n                    })\r\n                }\r\n            />\r\n            <Tab\r\n                sticky={fullState.sticky}\r\n                subtract={fullState.subtract}\r\n                sign={getSign()}\r\n            />\r\n            <Footer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\n\nimport './App.scss';\n\nimport MainPage from './pages/main-page/main-page.page';\n\nconst App = () => {\n\n  return (\n    <>\n      <MainPage />\n    </>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}